% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/local_image.R
\name{.SageMakerContainer}
\alias{.SageMakerContainer}
\title{Handle the lifecycle and configuration of a local container execution.}
\description{
This class is responsible for creating the directories and configuration
             files that the docker containers will use for either training or serving.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{.SageMakerContainer$new()}}
\item \href{#method-process}{\code{.SageMakerContainer$process()}}
\item \href{#method-train}{\code{.SageMakerContainer$train()}}
\item \href{#method-serve}{\code{.SageMakerContainer$serve()}}
\item \href{#method-stop_serving}{\code{.SageMakerContainer$stop_serving()}}
\item \href{#method-retrieve_artifacts}{\code{.SageMakerContainer$retrieve_artifacts()}}
\item \href{#method-write_processing_config_files}{\code{.SageMakerContainer$write_processing_config_files()}}
\item \href{#method-write_config_files}{\code{.SageMakerContainer$write_config_files()}}
\item \href{#method-clone}{\code{.SageMakerContainer$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize a SageMakerContainer instance
             It uses a :class:`sagemaker.session.Session` for general interaction
             with user configuration such as getting the default sagemaker S3 bucket.
             However this class does not call any of the SageMaker APIs.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.SageMakerContainer$new(
  instance_type,
  instance_count,
  image,
  sagemaker_session = NULL,
  container_entrypoint = NULL,
  container_arguments = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{instance_type}}{(str): The instance type to use. Either 'local' or
'local_gpu'}

\item{\code{instance_count}}{(int): The number of instances to create.}

\item{\code{image}}{(str): docker image to use.}

\item{\code{sagemaker_session}}{(sagemaker.session.Session): a sagemaker session
to use when interacting with SageMaker.}

\item{\code{container_entrypoint}}{(str): the container entrypoint to execute}

\item{\code{container_arguments}}{(str): the container entrypoint arguments}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-process"></a>}}
\if{latex}{\out{\hypertarget{method-process}{}}}
\subsection{Method \code{process()}}{
Run a processing job locally using docker-compose.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.SageMakerContainer$process(
  processing_inputs,
  processing_output_config,
  environment,
  processing_job_name
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{processing_inputs}}{(dict): The processing input specification.}

\item{\code{processing_output_config}}{(dict): The processing output configuration specification.}

\item{\code{environment}}{(dict): The environment collection for the processing job.}

\item{\code{processing_job_name}}{(str): Name of the local processing job being run.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-train"></a>}}
\if{latex}{\out{\hypertarget{method-train}{}}}
\subsection{Method \code{train()}}{
Run a training job locally using docker-compose.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.SageMakerContainer$train(
  input_data_config,
  output_data_config,
  hyperparameters,
  job_name
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_data_config}}{(dict): The Input Data Configuration, this contains data such as the
channels to be used for training.}

\item{\code{output_data_config}}{: The configuration of the output data.}

\item{\code{hyperparameters}}{(dict): The HyperParameters for the training job.}

\item{\code{job_name}}{(str): Name of the local training job being run.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(str): Location of the trained model.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-serve"></a>}}
\if{latex}{\out{\hypertarget{method-serve}{}}}
\subsection{Method \code{serve()}}{
Host a local endpoint using docker-compose.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.SageMakerContainer$serve(model_dir, environment)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{model_dir}}{(str): pointing to a file or s3:// location.}

\item{\code{environment}}{a dictionary of environment variables to be passed to the
hosting container.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-stop_serving"></a>}}
\if{latex}{\out{\hypertarget{method-stop_serving}{}}}
\subsection{Method \code{stop_serving()}}{
Stop the serving container.
             The serving container runs in async mode to allow the SDK to do other
             tasks.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.SageMakerContainer$stop_serving()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-retrieve_artifacts"></a>}}
\if{latex}{\out{\hypertarget{method-retrieve_artifacts}{}}}
\subsection{Method \code{retrieve_artifacts()}}{
Get the model artifacts from all the container nodes.
             Used after training completes to gather the data from all the
             individual containers. As the official SageMaker Training Service, it
             will override duplicate files if multiple containers have the same file
             names.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.SageMakerContainer$retrieve_artifacts(
  compose_data,
  output_data_config,
  job_name
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{compose_data}}{(list): Docker-Compose configuration in dictionary
format.}

\item{\code{output_data_config}}{: The configuration of the output data.}

\item{\code{job_name}}{: The name of the job.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Local path to the collected model artifacts.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-write_processing_config_files"></a>}}
\if{latex}{\out{\hypertarget{method-write_processing_config_files}{}}}
\subsection{Method \code{write_processing_config_files()}}{
Write the config files for the processing containers.
             This method writes the hyperparameters, resources and input data
             configuration files.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.SageMakerContainer$write_processing_config_files(
  host,
  environment,
  processing_inputs,
  processing_output_config,
  processing_job_name
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{host}}{(str): Host to write the configuration for}

\item{\code{environment}}{(dict): Environment variable collection.}

\item{\code{processing_inputs}}{(dict): Processing inputs.}

\item{\code{processing_output_config}}{(dict): Processing output configuration.}

\item{\code{processing_job_name}}{(str): Processing job name.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-write_config_files"></a>}}
\if{latex}{\out{\hypertarget{method-write_config_files}{}}}
\subsection{Method \code{write_config_files()}}{
Write the config files for the training containers.
             This method writes the hyperparameters, resources and input data
             configuration files.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.SageMakerContainer$write_config_files(
  host,
  hyperparameters,
  input_data_config
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{host}}{(str): Host to write the configuration for}

\item{\code{hyperparameters}}{(dict): Hyperparameters for training.}

\item{\code{input_data_config}}{(dict): Training input channels to be used for
training.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.SageMakerContainer$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
